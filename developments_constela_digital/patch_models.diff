diff --git a/client/src/models/Board.js b/client/src/models/Board.js
index 4f6c7d2..264fab0 100755
--- a/client/src/models/Board.js
+++ b/client/src/models/Board.js
@@ -25,6 +25,7 @@ export default class extends Model {
     }),
     filterUsers: many('User', 'filterBoards'),
     filterLabels: many('Label', 'filterBoards'),
+    filterPunctuations: many('Punctuation', 'filterPunctuations'),
   };
 
   static reducer({ type, payload }, Board) {
@@ -162,6 +163,14 @@ export default class extends Model {
       case ActionTypes.LABEL_FROM_BOARD_FILTER_REMOVE:
         Board.withId(payload.boardId).filterLabels.remove(payload.id);
 
+        break;
+      case ActionTypes.PUNCTUATION_TO_BOARD_FILTER_ADD:
+        Board.withId(payload.boardId).filterPunctuations.add(payload.id);
+
+        break;
+      case ActionTypes.PUNCTUATION_FROM_BOARD_FILTER_REMOVE:
+        Board.withId(payload.boardId).filterPunctuations.remove(payload.id);
+
         break;
       default:
     }
@@ -191,6 +200,7 @@ export default class extends Model {
     });
 
     this.labels.delete();
+    this.punctuations.delete();
 
     this.lists.toModelArray().forEach((listModel) => {
       listModel.deleteWithRelated();
diff --git a/client/src/models/Card.js b/client/src/models/Card.js
index e4cebbd..3fe1326 100755
--- a/client/src/models/Card.js
+++ b/client/src/models/Card.js
@@ -39,6 +39,7 @@ export default class extends Model {
     }),
     users: many('User', 'cards'),
     labels: many('Label', 'cards'),
+    punctuations: many('Punctuation', 'cards'),
   };
 
   static reducer({ type, payload }, Card) {
@@ -65,6 +66,12 @@ export default class extends Model {
           });
         }
 
+        if (payload.cardPunctuations) {
+          payload.cardPunctuations.forEach(({ cardId, punctuationId }) => {
+            Card.withId(cardId).punctuations.add(punctuationId);
+          });
+        }
+
         break;
       case ActionTypes.SOCKET_RECONNECT_HANDLE:
         Card.all().delete();
@@ -87,6 +94,12 @@ export default class extends Model {
           });
         }
 
+        if (payload.cardPunctuations) {
+          payload.cardPunctuations.forEach(({ cardId, punctuationId }) => {
+            Card.withId(cardId).punctuations.add(punctuationId);
+          });
+        }
+
         break;
       case ActionTypes.USER_TO_CARD_ADD: {
         const cardModel = Card.withId(payload.cardId);
@@ -129,10 +142,18 @@ export default class extends Model {
           Card.withId(cardId).labels.add(labelId);
         });
 
+        payload.cardPunctuations.forEach(({ cardId, punctuationId }) => {
+          Card.withId(cardId).punctuations.add(punctuationId);
+        });
+
         break;
       case ActionTypes.LABEL_TO_CARD_ADD:
         Card.withId(payload.cardId).labels.add(payload.id);
 
+        break;
+      case ActionTypes.PUNCTUATION_TO_CARD_ADD:
+        Card.withId(payload.cardId).punctuations.add(payload.id);
+
         break;
       case ActionTypes.LABEL_TO_CARD_ADD__SUCCESS:
       case ActionTypes.LABEL_TO_CARD_ADD_HANDLE:
@@ -140,10 +161,22 @@ export default class extends Model {
           Card.withId(payload.cardLabel.cardId).labels.add(payload.cardLabel.labelId);
         } catch {} // eslint-disable-line no-empty
 
+        break;
+      case ActionTypes.PUNCTUATION_TO_CARD_ADD__SUCCESS:
+      case ActionTypes.PUNCTUATION_TO_CARD_ADD_HANDLE:
+        try {
+          // eslint-disable-next-line prettier/prettier
+          Card.withId(payload.cardPunctuation.cardId).punctuations.add(payload.cardPunctuation.punctuationId);
+        } catch {} // eslint-disable-line no-empty
+
         break;
       case ActionTypes.LABEL_FROM_CARD_REMOVE:
         Card.withId(payload.cardId).labels.remove(payload.id);
 
+        break;
+      case ActionTypes.PUNCTUATION_FROM_CARD_REMOVE:
+        Card.withId(payload.cardId).punctuations.remove(payload.id);
+
         break;
       case ActionTypes.LABEL_FROM_CARD_REMOVE__SUCCESS:
       case ActionTypes.LABEL_FROM_CARD_REMOVE_HANDLE:
@@ -151,6 +184,15 @@ export default class extends Model {
           Card.withId(payload.cardLabel.cardId).labels.remove(payload.cardLabel.labelId);
         } catch {} // eslint-disable-line no-empty
 
+        break;
+      case ActionTypes.PUNCTUATION_FROM_CARD_REMOVE__SUCCESS:
+      case ActionTypes.PUNCTUATION_FROM_CARD_REMOVE_HANDLE:
+        try {
+          // eslint-disable-next-line prettier/prettier
+          Card.withId(payload.cardPunctuation.cardId).punctuations.remove(payload.cardPunctuation.punctuationId);
+          // eslint-disable-next-line no-empty
+        } catch {}
+
         break;
       case ActionTypes.CARD_CREATE:
       case ActionTypes.CARD_CREATE_HANDLE:
diff --git a/client/src/models/List.js b/client/src/models/List.js
index 73e46e1..ee92891 100755
--- a/client/src/models/List.js
+++ b/client/src/models/List.js
@@ -1,3 +1,4 @@
+/* eslint-disable prettier/prettier */
 import { Model, attr, fk } from 'redux-orm';
 
 import ActionTypes from '../constants/ActionTypes';
@@ -88,6 +89,7 @@ export default class extends Model {
 
     const filterUserIds = this.board.filterUsers.toRefArray().map((user) => user.id);
     const filterLabelIds = this.board.filterLabels.toRefArray().map((label) => label.id);
+    const filterPunctuationIds = this.board.filterPunctuations.toRefArray().map((punctuation) => punctuation.id);
 
     if (filterUserIds.length > 0) {
       cardModels = cardModels.filter((cardModel) => {
@@ -105,6 +107,14 @@ export default class extends Model {
       });
     }
 
+    if (filterPunctuationIds.length > 0) {
+      cardModels = cardModels.filter((cardModel) => {
+        const punctuations = cardModel.punctuations.toRefArray();
+
+        return punctuations.some((punctuation) => filterPunctuationIds.includes(punctuation.id));
+      });
+    }
+
     return cardModels;
   }
 
diff --git a/client/src/models/index.js b/client/src/models/index.js
index e426524..14b8875 100755
--- a/client/src/models/index.js
+++ b/client/src/models/index.js
@@ -4,6 +4,7 @@ import ProjectManager from './ProjectManager';
 import Board from './Board';
 import BoardMembership from './BoardMembership';
 import Label from './Label';
+import Punctuation from './Punctuation';
 import List from './List';
 import Card from './Card';
 import Task from './Task';
@@ -18,6 +19,7 @@ export {
   Board,
   BoardMembership,
   Label,
+  Punctuation,
   List,
   Card,
   Task,
